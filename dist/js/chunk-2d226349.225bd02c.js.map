{"version":3,"sources":["webpack:///./src/components/chat/ChatUrl.vue?9516","webpack:///src/components/chat/ChatUrl.vue","webpack:///./src/components/chat/ChatUrl.vue?c218","webpack:///./src/components/chat/ChatUrl.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","group","instances","_l","instance","key","on","$event","open","attrs","chat_url","model","value","callback","$$v","expression","create","staticRenderFns","name","props","data","watch","update","console","log","to","$route","methods","channel","$store","commit","params","undefined","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,kBAAkB,CAACF,EAAG,KAAK,CAACJ,EAAIO,GAAG,oBAAoBP,EAAIO,GAAG,cAAcP,EAAIQ,GAAGR,EAAIS,OAAO,KAAKL,EAAG,MAAMJ,EAAIO,GAAG,gBAAgBP,EAAIQ,GAAGR,EAAIU,YAAYN,EAAG,MAAMJ,EAAIW,GAAIX,EAAa,WAAE,SAASY,GAAU,OAAOR,EAAG,WAAW,CAACS,IAAID,EAASE,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOf,EAAIgB,KAAKJ,MAAa,CAACZ,EAAIO,GAAG,QAAQP,EAAIQ,GAAGI,SAAeR,EAAG,UAAU,CAACa,MAAM,CAAC,YAAcjB,EAAIkB,UAAUC,MAAM,CAACC,MAAOpB,EAAY,SAAEqB,SAAS,SAAUC,GAAMtB,EAAIkB,SAASI,GAAKC,WAAW,cAAcnB,EAAG,WAAW,CAACU,GAAG,CAAC,MAAQd,EAAIwB,SAAS,CAACxB,EAAIO,GAAG,aAAa,IAChpBkB,EAAkB,G,wFC+BtB,GACEC,KAAM,UACNC,MAAO,CAAC,SACR,QAHF,WAGA,wJACA,WADA,8CAGEC,KAAM,WACJ,MAAO,CACLlB,UAAN,GACMQ,SAAN,SAGEW,MAAF,CACIpB,MADJ,WAEMR,KAAK6B,UAEP,OAJJ,SAIA,GACMC,QAAQC,IAAIC,GAEZF,QAAQC,IAAI/B,KAAKiC,UAGrBC,QAAF,CACInB,KADJ,SACA,GACM,IAAN,sCACA,oDACMe,QAAQC,IAAII,GACZnC,KAAKoC,OAAOC,OAAO,kBAAmBF,GAEtCL,QAAQC,IAAI/B,KAAKiC,QACjBjC,KAAKiC,OAAOK,OAAO9B,WAAQ+B,GAG7B,OAXJ,WAWA,mLACA,wBACA,WACA,eACA,kBACA,aACA,eANA,SAOA,2BAPA,cAOA,EAPA,OAQA,oCAEA,kEACA,+BAEA,kCACA,6EACA,sFAEA,+BACA,kEAlBA,UAoBA,SApBA,yBAsBA,wBAtBA,eAsBA,EAtBA,OAuBA,+BACA,kGACA,yEAzBA,UA2BA,SA3BA,+CA8CI,OAzDJ,WAyDA,+KACA,qBADA,SAEA,wBAFA,OAEA,EAFA,OAGA,gCACA,eACA,eACA,0GACA,wBACA,KACA,uBACA,4DACA,sBACA,SACA,aAIA,cAYA,2BACA,iBACA,aA/BA,iDC/GgW,I,YCO5VC,EAAY,eACd,EACA1C,EACA0B,GACA,EACA,KACA,KACA,MAIa,aAAAgB,E","file":"js/chunk-2d226349.225bd02c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"solid-hat-list\"},[_c('h1',[_vm._v(\"Chat for group\")]),_vm._v(\" for group \"+_vm._s(_vm.group)+\".\"),_c('br'),_vm._v(\" instances : \"+_vm._s(_vm.instances)),_c('br'),_vm._l((_vm.instances),function(instance){return _c('b-button',{key:instance,on:{\"click\":function($event){return _vm.open(instance)}}},[_vm._v(\"Open \"+_vm._s(instance))])}),_c('b-input',{attrs:{\"placeholder\":_vm.chat_url},model:{value:(_vm.chat_url),callback:function ($$v) {_vm.chat_url=$$v},expression:\"chat_url\"}}),_c('b-button',{on:{\"click\":_vm.create}},[_vm._v(\"Create\")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"solid-hat-list\">\n    <h1>Chat for group</h1>\n    for group {{group}}.<br>\n    instances : {{ instances }}<br>\n\n    <b-button v-for=\"instance in instances\" :key=\"instance\" @click=\"open(instance)\">Open {{instance}}</b-button>\n\n\n\n\n\n\n    <b-input v-model=\"chat_url\" :placeholder=\"chat_url\" />\n    <b-button @click=\"create\">Create</b-button>\n    <!--  <COMPONENET />  -->\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport { createDocument, fetchDocument } from 'tripledoc';\nimport { rdf, dct /*vcard, dct, foaf, ldp*/} from 'rdf-namespaces'\n/*import {\ngetSolidDataset,\ngetThing,\n//  getStringNoLocale,\n//  getUrlAll\n} from \"@inrupt/solid-client\";*/\n\n//import { FOAF, VCARD } from \"@inrupt/vocab-common-rdf\";\n\nexport default {\n  name: 'ChatUrl',\n  props: ['group'],\n  async   created(){\n    this.update()\n  },\n  data: function () {\n    return {\n      instances:[],\n      chat_url:\"test\"\n    }\n  },\n  watch:{\n    group(){\n      this.update()\n    },\n    '$route' (to) {\n      console.log(to)\n      \n      console.log(this.$route)\n    },\n  },\n  methods:{\n    open(inst){\n      let folder = inst.substring(0,inst.lastIndexOf(\"/\")+1) //inst.substring(inst.lastIndexOf('/') + 1)\n      let channel = {instance: folder, created: \"09/27/2020\", label: \"unknown\"}\n      console.log(channel)\n      this.$store.commit('chat/setChannel', channel)\n\n      console.log(this.$route)\n      this.$route.params.group = undefined\n      //  this.$route.push({ name: 'ChatUrl', params: { group: undefined } })\n    },\n    async  create(){\n      console.log(this.chat_url)\n      var dateObj = new Date();\n      console.log(dateObj)\n      var date = dateObj.toISOString()\n      let timestamp = Date.now()\n      console.log(timestamp)\n      let chatDoc = await createDocument(this.chat_url);\n      let subj =   chatDoc.addSubject({identifier: \"this\"})\n      //subj.addLiteral(sioc.content, this.activity)\n      subj.addRef(rdf.type, \"http://www.w3.org/ns/pim/meeting#LongChat\")\n      subj.addLiteral(dct.created, date)\n      //  subj.addRef(dct.author, \"webid\")\n      subj.addLiteral(dct.title, \"chat\")\n      subj.addRef(\"http://www.w3.org/2005/01/wf/flow#participation\", this.chat_url+\"#\"+timestamp)\n      subj.addRef(\"http://www.w3.org/ns/ui#sharedPreferences\", this.chat_url+\"#SharedPreferences\")\n\n      let instance =  chatDoc.addSubject({identifier: timestamp})\n      instance.addLiteral(\"http://www.w3.org/ns/ui#backgroundColor\", \"#c0d2fe\")\n\n      await chatDoc.save();\n\n      let groupDoc = await fetchDocument(this.group);\n      let group_instance =  groupDoc.addSubject({identifier: timestamp})\n      group_instance.addRef(\"http://www.w3.org/ns/solid/terms#forClass\", \"http://www.w3.org/ns/pim/meeting#LongChat\")\n      group_instance.addRef(\"http://www.w3.org/ns/solid/terms#instance\", this.chat_url+\"#this\")\n\n      await groupDoc.save();\n\n\n      /*\n      </long-chat/index.ttl#this>            a                    mee:LongChat .\n      </long-chat/index.ttl#this>            dc:author            </profile/card#me> .\n      </long-chat/index.ttl#this>            dc:created           \"2018-07-06T21:36:04Z\"^^XML:dateTime .\n      </long-chat/index.ttl#this>            dc:title             \"Chat channel\" .\n      </long-chat/index.ttl#this>            flow:participation   :id1555491215455 .\n      </long-chat/index.ttl#this>            ui:sharedPreferences :SharedPreferences .\n      </long-chat/index.ttl#id1555491215455> ic:dtstart           \"2019-04-17T08:53:35Z\"^^XML:dateTime .\n      </long-chat/index.ttl#id1555491215455> flow:participant     </profile/card#me> .\n      </long-chat/index.ttl#id1555491215455> ui:backgroundColor   \"#c0d2fe\" .*/\n\n\n\n\n\n    },\n    async update(){\n      console.log(this.group)\n      let groupDoc = await fetchDocument(this.group);\n      let gSubj = groupDoc.getSubject(this.group+\"#this\")\n      console.log(gSubj)\n      console.log(groupDoc)\n      let chats = groupDoc.findSubjects(\"http://www.w3.org/ns/solid/terms#forClass\", \"http://www.w3.org/ns/pim/meeting#LongChat\")\n      console.log(chats.length, chats)\n      let instances = []\n      chats.forEach((chat) => {\n        let inst = chat.getRef('http://www.w3.org/ns/solid/terms#instance')\n        console.log(\"INST\",inst)\n        if ( inst != null ){\n          instances.push(inst)\n        }\n\n      });\n      this.instances = instances\n\n      //\"http://www.w3.org/ns/solid/terms#instance\"\n\n      //https://github.com/solid/solid-panes/blob/master/Documentation/conventions.md#long-chat\n      //let part = this.group.substring(this.group.lastIndexOf('/') + 1).split(\".ttl\")[0]\n      /*let parts = this.group.split(\"/\") //.lastIndexOf('/')\n      console.log(parts)\n      console.log(parts.pop())\n      let root = parts.join(\"/\")\n      console.log(root)*/\n\n      let folder = this.group.split(\".ttl\")[0]\n      let index = folder+\"/index.ttl\"\n      this.chat_url = index\n\n\n\n      /*  const myDataset = await getSolidDataset(this.group);\n      const subject = getThing( myDataset, this.group);\n      console.log(subject)*/\n    }\n  }\n  /*  components: {\n  'Component': () => import('@/components/Component'),\n},*/\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatUrl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChatUrl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChatUrl.vue?vue&type=template&id=3aebc4d2&\"\nimport script from \"./ChatUrl.vue?vue&type=script&lang=js&\"\nexport * from \"./ChatUrl.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}