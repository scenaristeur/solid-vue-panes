{"version":3,"sources":["webpack:///./node_modules/node-libs-browser/node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///./node_modules/markdown/lib/markdown.js","webpack:///./node_modules/markdown/lib/index.js","webpack:///./node_modules/node-libs-browser/node_modules/util/support/isBufferBrowser.js","webpack:///./src/components/views/ArticleView.vue?6200","webpack:///src/components/views/ArticleView.vue","webpack:///./src/components/views/ArticleView.vue?1c33","webpack:///./src/components/views/ArticleView.vue","webpack:///./src/components/views/ArticleView.vue?d606","webpack:///./node_modules/node-libs-browser/node_modules/util/util.js"],"names":["Object","create","module","exports","ctor","superCtor","super_","prototype","constructor","value","enumerable","writable","configurable","TempCtor","expose","Markdown","dialect","this","dialects","Gruber","Error","String","em_state","strong_state","debug_indent","mk_block_toSource","uneval","toString","trailing","lineNumber","mk_block_inspect","util","inspect","parse","source","md","toTree","toHTML","options","input","toHTMLTree","renderJsonML","attrs","extract_attr","refs","references","html","convert_tree_to_html","merge_text_nodes","mk_block","block","trail","line","arguments","length","s","toSource","undefined","count_lines","str","n","i","indexOf","strong_em","tag","state_slot","other_slot","CloseTag","len","len_after","name","text","orig_match","shift","other","slice","state","unshift","res","processInline","substr","last","pop","consumed","concat","split_meta_hash","meta_string","meta","split","parts","in_quotes","letter","push","split_blocks","startLine","replace","m","re","blocks","line_no","exec","lastIndex","processBlock","next","cbs","ord","__order__","__call__","call","isArray","debug","inline","custom_root","Array","old_tree","tree","b","apply","args","print","console","log","loop_re_over_block","cb","valueOf","atxHeader","match","header","level","setextHeader","code","ret","block_search","substring","join","horizRule","jsonml","lists","any_list","bullet_list","is_list_re","RegExp","indent_re","regex_for_depth","depth","expand_tab","add","li","loose","nl","add_to","what","is_str","get_contained_blocks","x","paragraphify","stack","list","last_li","splice","sublist","make_list","lines","li_accumulate","l","line_re","wanted_depth","Math","floor","found","indent","contained","forEach","next_block","hr","blockquote","prev","abutting","processedBlock","attr","isEmpty","referenceDefn","ref","toLowerCase","href","title","para","__oneElement__","patterns_or_re","previous_nodes","__patterns__","index","patterns","out","__escape__","charAt","alt","original","orig","DialectHelpers","inline_until_char","link","children","url","open_parens","buildBlockOrder","d","buildInlinePatterns","fn","pattern","want","nodes","subclassDialect","Block","Inline","Maruku","processMetaHash","test","id","document_meta","pairs","p","key","block_meta","hash","node","a","result","definition_list","tight","terms","defns","table","_split_on_unescaped","ch","r","leading_pipe","no_leading_pipe","html_attrs","align","trim","row","html_row","matches","before","k","obj","arr","thisp","hasOwnProperty","escapeHTML","render_tree","attributes","content","tag_attrs","preprocessTreeNode","src","root","markdown","arg","copy","fill","readUInt8","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","label","maker","created","domProps","HtmlContent","types","params","inReplyTo","query","article_url","_e","staticRenderFns","components","props","update","subject","$route","watch","methods","getLiteral","inbox","getRef","getAllRefs","component","getOwnPropertyDescriptors","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","Number","JSON","stringify","_","isNull","isObject","deprecate","msg","process","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","trace","error","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","array","val","idx","recurseTimes","isFunction","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","isDate","Date","output","base","braces","toUTCString","formatArray","map","formatProperty","reduceToSingleString","simple","isNumber","desc","get","set","reduce","cur","numLinesEst","ar","isNullOrUndefined","isSymbol","objectToString","e","isPrimitive","o","pad","debuglog","NODE_DEBUG","toUpperCase","pid","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","inherits","origin","kCustomPromisifiedSymbol","Symbol","callbackifyOnRejected","reason","newReason","callbackify","TypeError","callbackified","maybeCb","self","then","nextTick","rej","setPrototypeOf","getPrototypeOf","defineProperties","promisify","defineProperty","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","custom"],"mappings":"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","file":"js/chunk-2e153010.84945f86.js","sourcesContent":["if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Released under MIT license\n// Copyright (c) 2009-2010 Dominic Baggott\n// Copyright (c) 2009-2010 Ash Berlin\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\n\n/*jshint browser:true, devel:true */\n\n(function( expose ) {\n\n/**\n *  class Markdown\n *\n *  Markdown processing in Javascript done right. We have very particular views\n *  on what constitutes 'right' which include:\n *\n *  - produces well-formed HTML (this means that em and strong nesting is\n *    important)\n *\n *  - has an intermediate representation to allow processing of parsed data (We\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\n *\n *  - is easily extensible to add new dialects without having to rewrite the\n *    entire parsing mechanics\n *\n *  - has a good test suite\n *\n *  This implementation fulfills all of these (except that the test suite could\n *  do with expanding to automatically run all the fixtures from other Markdown\n *  implementations.)\n *\n *  ##### Intermediate Representation\n *\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\n *\n *  [JsonML]: http://jsonml.org/ \"JSON Markup Language\"\n **/\nvar Markdown = expose.Markdown = function(dialect) {\n  switch (typeof dialect) {\n    case \"undefined\":\n      this.dialect = Markdown.dialects.Gruber;\n      break;\n    case \"object\":\n      this.dialect = dialect;\n      break;\n    default:\n      if ( dialect in Markdown.dialects ) {\n        this.dialect = Markdown.dialects[dialect];\n      }\n      else {\n        throw new Error(\"Unknown Markdown dialect '\" + String(dialect) + \"'\");\n      }\n      break;\n  }\n  this.em_state = [];\n  this.strong_state = [];\n  this.debug_indent = \"\";\n};\n\n/**\n *  parse( markdown, [dialect] ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\n **/\nexpose.parse = function( source, dialect ) {\n  // dialect will default if undefined\n  var md = new Markdown( dialect );\n  return md.toTree( source );\n};\n\n/**\n *  toHTML( markdown, [dialect]  ) -> String\n *  toHTML( md_tree ) -> String\n *  - markdown (String): markdown string to parse\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Take markdown (either as a string or as a JsonML tree) and run it through\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\n **/\nexpose.toHTML = function toHTML( source , dialect , options ) {\n  var input = expose.toHTMLTree( source , dialect , options );\n\n  return expose.renderJsonML( input );\n};\n\n/**\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\n *  toHTMLTree( md_tree ) -> JsonML\n *  - markdown (String): markdown string to parse\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\n *  - md_tree (Markdown.JsonML): parsed markdown tree\n *\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\n *  to this function, it is first parsed into a markdown tree by calling\n *  [[parse]].\n **/\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\n  // convert string input to an MD tree\n  if ( typeof input ===\"string\" ) input = this.parse( input, dialect );\n\n  // Now convert the MD tree to an HTML tree\n\n  // remove references from the tree\n  var attrs = extract_attr( input ),\n      refs = {};\n\n  if ( attrs && attrs.references ) {\n    refs = attrs.references;\n  }\n\n  var html = convert_tree_to_html( input, refs , options );\n  merge_text_nodes( html );\n  return html;\n};\n\n// For Spidermonkey based engines\nfunction mk_block_toSource() {\n  return \"Markdown.mk_block( \" +\n          uneval(this.toString()) +\n          \", \" +\n          uneval(this.trailing) +\n          \", \" +\n          uneval(this.lineNumber) +\n          \" )\";\n}\n\n// node\nfunction mk_block_inspect() {\n  var util = require(\"util\");\n  return \"Markdown.mk_block( \" +\n          util.inspect(this.toString()) +\n          \", \" +\n          util.inspect(this.trailing) +\n          \", \" +\n          util.inspect(this.lineNumber) +\n          \" )\";\n\n}\n\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\n  // Be helpful for default case in tests.\n  if ( arguments.length == 1 ) trail = \"\\n\\n\";\n\n  var s = new String(block);\n  s.trailing = trail;\n  // To make it clear its not just a string\n  s.inspect = mk_block_inspect;\n  s.toSource = mk_block_toSource;\n\n  if ( line != undefined )\n    s.lineNumber = line;\n\n  return s;\n};\n\nfunction count_lines( str ) {\n  var n = 0, i = -1;\n  while ( ( i = str.indexOf(\"\\n\", i + 1) ) !== -1 ) n++;\n  return n;\n}\n\n// Internal - split source into rough blocks\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, \"\\n\");\n  // [\\s\\S] matches _anything_ (newline or space)\n  // [^] is equivalent but doesn't work in IEs.\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\n      blocks = [],\n      m;\n\n  var line_no = 1;\n\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\n    // skip (but count) leading blank lines\n    line_no += count_lines( m[0] );\n    re.lastIndex = m[0].length;\n  }\n\n  while ( ( m = re.exec(input) ) !== null ) {\n    if (m[2] == \"\\n#\") {\n      m[2] = \"\\n\";\n      re.lastIndex--;\n    }\n    blocks.push( mk_block( m[1], m[2], line_no ) );\n    line_no += count_lines( m[0] );\n  }\n\n  return blocks;\n};\n\n/**\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\n *  - block (String): the block to process\n *  - next (Array): the following blocks\n *\n * Process `block` and return an array of JsonML nodes representing `block`.\n *\n * It does this by asking each block level function in the dialect to process\n * the block until one can. Succesful handling is indicated by returning an\n * array (with zero or more JsonML nodes), failure by a false value.\n *\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\n * themselves as appropriate.\n *\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\n * can adjust `next` in place using shift/splice etc.\n *\n * If any of this default behaviour is not right for the dialect, you can\n * define a `__call__` method on the dialect that will get invoked to handle\n * the block processing.\n */\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\n  var cbs = this.dialect.block,\n      ord = cbs.__order__;\n\n  if ( \"__call__\" in cbs ) {\n    return cbs.__call__.call(this, block, next);\n  }\n\n  for ( var i = 0; i < ord.length; i++ ) {\n    //D:this.debug( \"Testing\", ord[i] );\n    var res = cbs[ ord[i] ].call( this, block, next );\n    if ( res ) {\n      //D:this.debug(\"  matched\");\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\n        this.debug(ord[i], \"didn't return a proper array\");\n      //D:this.debug( \"\" );\n      return res;\n    }\n  }\n\n  // Uhoh! no match! Should we throw an error?\n  return [];\n};\n\nMarkdown.prototype.processInline = function processInline( block ) {\n  return this.dialect.inline.__call__.call( this, String( block ) );\n};\n\n/**\n *  Markdown#toTree( source ) -> JsonML\n *  - source (String): markdown source to parse\n *\n *  Parse `source` into a JsonML tree representing the markdown document.\n **/\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\n\n  // Make tree a member variable so its easier to mess with in extensions\n  var old_tree = this.tree;\n  try {\n    this.tree = custom_root || this.tree || [ \"markdown\" ];\n\n    blocks:\n    while ( blocks.length ) {\n      var b = this.processBlock( blocks.shift(), blocks );\n\n      // Reference blocks and the like won't return any content\n      if ( !b.length ) continue blocks;\n\n      this.tree.push.apply( this.tree, b );\n    }\n    return this.tree;\n  }\n  finally {\n    if ( custom_root ) {\n      this.tree = old_tree;\n    }\n  }\n};\n\n// Noop by default\nMarkdown.prototype.debug = function () {\n  var args = Array.prototype.slice.call( arguments);\n  args.unshift(this.debug_indent);\n  if ( typeof print !== \"undefined\" )\n      print.apply( print, args );\n  if ( typeof console !== \"undefined\" && typeof console.log !== \"undefined\" )\n      console.log.apply( null, args );\n}\n\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\n  // Dont use /g regexps with this\n  var m,\n      b = block.valueOf();\n\n  while ( b.length && (m = re.exec(b) ) != null ) {\n    b = b.substr( m[0].length );\n    cb.call(this, m);\n  }\n  return b;\n};\n\n/**\n * Markdown.dialects\n *\n * Namespace of built-in dialects.\n **/\nMarkdown.dialects = {};\n\n/**\n * Markdown.dialects.Gruber\n *\n * The default dialect that follows the rules set out by John Gruber's\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\n * that script which in some places is not exactly what the syntax web page\n * says.\n **/\nMarkdown.dialects.Gruber = {\n  block: {\n    atxHeader: function atxHeader( block, next ) {\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var header = [ \"header\", { level: m[ 1 ].length } ];\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    setextHeader: function setextHeader( block, next ) {\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\n\n      if ( !m ) return undefined;\n\n      var level = ( m[ 2 ] === \"=\" ) ? 1 : 2;\n      var header = [ \"header\", { level : level }, m[ 1 ] ];\n\n      if ( m[0].length < block.length )\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\n\n      return [ header ];\n    },\n\n    code: function code( block, next ) {\n      // |    Foo\n      // |bar\n      // should be a code block followed by a paragraph. Fun\n      //\n      // There might also be adjacent code block to merge.\n\n      var ret = [],\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\n          lines;\n\n      // 4 spaces + content\n      if ( !block.match( re ) ) return undefined;\n\n      block_search:\n      do {\n        // Now pull out the rest of the lines\n        var b = this.loop_re_over_block(\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\n\n        if ( b.length ) {\n          // Case alluded to in first comment. push it back on as a new block\n          next.unshift( mk_block(b, block.trailing) );\n          break block_search;\n        }\n        else if ( next.length ) {\n          // Check the next block - it might be code too\n          if ( !next[0].match( re ) ) break block_search;\n\n          // Pull how how many blanks lines follow - minus two to account for .join\n          ret.push ( block.trailing.replace(/[^\\n]/g, \"\").substring(2) );\n\n          block = next.shift();\n        }\n        else {\n          break block_search;\n        }\n      } while ( true );\n\n      return [ [ \"code_block\", ret.join(\"\\n\") ] ];\n    },\n\n    horizRule: function horizRule( block, next ) {\n      // this needs to find any hr in the block to handle abutting blocks\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\n\n      if ( !m ) {\n        return undefined;\n      }\n\n      var jsonml = [ [ \"hr\" ] ];\n\n      // if there's a leading abutting block, process it\n      if ( m[ 1 ] ) {\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\n      }\n\n      // if there's a trailing abutting block, stick it into next\n      if ( m[ 3 ] ) {\n        next.unshift( mk_block( m[ 3 ] ) );\n      }\n\n      return jsonml;\n    },\n\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\n    // between the items (and result in text just in the <li>) and loose lists,\n    // which have an empty line between list items, resulting in (one or more)\n    // paragraphs inside the <li>.\n    //\n    // There are all sorts weird edge cases about the original markdown.pl's\n    // handling of lists:\n    //\n    // * Nested lists are supposed to be indented by four chars per level. But\n    //   if they aren't, you can get a nested list by indenting by less than\n    //   four so long as the indent doesn't match an indent of an existing list\n    //   item in the 'nest stack'.\n    //\n    // * The type of the list (bullet or number) is controlled just by the\n    //    first item at the indent. Subsequent changes are ignored unless they\n    //    are for nested lists\n    //\n    lists: (function( ) {\n      // Use a closure to hide a few variables.\n      var any_list = \"[*+-]|\\\\d+\\\\.\",\n          bullet_list = /[*+-]/,\n          number_list = /\\d+\\./,\n          // Capture leading indent as it matters for determining nested lists.\n          is_list_re = new RegExp( \"^( {0,3})(\" + any_list + \")[ \\t]+\" ),\n          indent_re = \"(?: {0,3}\\\\t| {4})\";\n\n      // TODO: Cache this regexp for certain depths.\n      // Create a regexp suitable for matching an li for a given stack depth\n      function regex_for_depth( depth ) {\n\n        return new RegExp(\n          // m[1] = indent, m[2] = list_type\n          \"(?:^(\" + indent_re + \"{0,\" + depth + \"} {0,3})(\" + any_list + \")\\\\s+)|\" +\n          // m[3] = cont\n          \"(^\" + indent_re + \"{0,\" + (depth-1) + \"}[ ]{0,4})\"\n        );\n      }\n      function expand_tab( input ) {\n        return input.replace( / {0,3}\\t/g, \"    \" );\n      }\n\n      // Add inline content `inline` to `li`. inline comes from processInline\n      // so is an array of content\n      function add(li, loose, inline, nl) {\n        if ( loose ) {\n          li.push( [ \"para\" ].concat(inline) );\n          return;\n        }\n        // Hmmm, should this be any block level element or just paras?\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == \"para\"\n                   ? li[li.length -1]\n                   : li;\n\n        // If there is already some content in this list, add the new line in\n        if ( nl && li.length > 1 ) inline.unshift(nl);\n\n        for ( var i = 0; i < inline.length; i++ ) {\n          var what = inline[i],\n              is_str = typeof what == \"string\";\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == \"string\" ) {\n            add_to[ add_to.length-1 ] += what;\n          }\n          else {\n            add_to.push( what );\n          }\n        }\n      }\n\n      // contained means have an indent greater than the current one. On\n      // *every* line in the block\n      function get_contained_blocks( depth, blocks ) {\n\n        var re = new RegExp( \"^(\" + indent_re + \"{\" + depth + \"}.*?\\\\n?)*$\" ),\n            replace = new RegExp(\"^\" + indent_re + \"{\" + depth + \"}\", \"gm\"),\n            ret = [];\n\n        while ( blocks.length > 0 ) {\n          if ( re.exec( blocks[0] ) ) {\n            var b = blocks.shift(),\n                // Now remove that indent\n                x = b.replace( replace, \"\");\n\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\n          }\n          else {\n            break;\n          }\n        }\n        return ret;\n      }\n\n      // passed to stack.forEach to turn list items up the stack into paras\n      function paragraphify(s, i, stack) {\n        var list = s.list;\n        var last_li = list[list.length-1];\n\n        if ( last_li[1] instanceof Array && last_li[1][0] == \"para\" ) {\n          return;\n        }\n        if ( i + 1 == stack.length ) {\n          // Last stack frame\n          // Keep the same array, but replace the contents\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ) );\n        }\n        else {\n          var sublist = last_li.pop();\n          last_li.push( [\"para\"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\n        }\n      }\n\n      // The matcher function\n      return function( block, next ) {\n        var m = block.match( is_list_re );\n        if ( !m ) return undefined;\n\n        function make_list( m ) {\n          var list = bullet_list.exec( m[2] )\n                   ? [\"bulletlist\"]\n                   : [\"numberlist\"];\n\n          stack.push( { list: list, indent: m[1] } );\n          return list;\n        }\n\n\n        var stack = [], // Stack of lists for nesting.\n            list = make_list( m ),\n            last_li,\n            loose = false,\n            ret = [ stack[0].list ],\n            i;\n\n        // Loop to search over block looking for inner block elements and loose lists\n        loose_search:\n        while ( true ) {\n          // Split into lines preserving new lines at end of line\n          var lines = block.split( /(?=\\n)/ );\n\n          // We have to grab all lines for a li and call processInline on them\n          // once as there are some inline things that can span lines.\n          var li_accumulate = \"\";\n\n          // Loop over the lines in this block looking for tight lists.\n          tight_search:\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\n            var nl = \"\",\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return \"\"; });\n\n            // TODO: really should cache this\n            var line_re = regex_for_depth( stack.length );\n\n            m = l.match( line_re );\n            //print( \"line:\", uneval(l), \"\\nline match:\", uneval(m) );\n\n            // We have a list item\n            if ( m[1] !== undefined ) {\n              // Process the previous list item, if any\n              if ( li_accumulate.length ) {\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\n                // Loose mode will have been dealt with. Reset it\n                loose = false;\n                li_accumulate = \"\";\n              }\n\n              m[1] = expand_tab( m[1] );\n              var wanted_depth = Math.floor(m[1].length/4)+1;\n              //print( \"want:\", wanted_depth, \"stack:\", stack.length);\n              if ( wanted_depth > stack.length ) {\n                // Deep enough for a nested list outright\n                //print ( \"new nested list\" );\n                list = make_list( m );\n                last_li.push( list );\n                last_li = list[1] = [ \"listitem\" ];\n              }\n              else {\n                // We aren't deep enough to be strictly a new level. This is\n                // where Md.pl goes nuts. If the indent matches a level in the\n                // stack, put it there, else put it one deeper then the\n                // wanted_depth deserves.\n                var found = false;\n                for ( i = 0; i < stack.length; i++ ) {\n                  if ( stack[ i ].indent != m[1] ) continue;\n                  list = stack[ i ].list;\n                  stack.splice( i+1, stack.length - (i+1) );\n                  found = true;\n                  break;\n                }\n\n                if (!found) {\n                  //print(\"not found. l:\", uneval(l));\n                  wanted_depth++;\n                  if ( wanted_depth <= stack.length ) {\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\n                    //print(\"Desired depth now\", wanted_depth, \"stack:\", stack.length);\n                    list = stack[wanted_depth-1].list;\n                    //print(\"list:\", uneval(list) );\n                  }\n                  else {\n                    //print (\"made new stack for messy indent\");\n                    list = make_list(m);\n                    last_li.push(list);\n                  }\n                }\n\n                //print( uneval(list), \"last\", list === stack[stack.length-1].list );\n                last_li = [ \"listitem\" ];\n                list.push(last_li);\n              } // end depth of shenegains\n              nl = \"\";\n            }\n\n            // Add content\n            if ( l.length > m[0].length ) {\n              li_accumulate += nl + l.substr( m[0].length );\n            }\n          } // tight_search\n\n          if ( li_accumulate.length ) {\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\n            // Loose mode will have been dealt with. Reset it\n            loose = false;\n            li_accumulate = \"\";\n          }\n\n          // Look at the next block - we might have a loose list. Or an extra\n          // paragraph for the current li\n          var contained = get_contained_blocks( stack.length, next );\n\n          // Deal with code blocks or properly nested lists\n          if ( contained.length > 0 ) {\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\n          }\n\n          var next_block = next[0] && next[0].valueOf() || \"\";\n\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\n            block = next.shift();\n\n            // Check for an HR following a list: features/lists/hr_abutting\n            var hr = this.dialect.block.horizRule( block, next );\n\n            if ( hr ) {\n              ret.push.apply(ret, hr);\n              break;\n            }\n\n            // Make sure all listitems up the stack are paragraphs\n            forEach( stack, paragraphify, this);\n\n            loose = true;\n            continue loose_search;\n          }\n          break;\n        } // loose_search\n\n        return ret;\n      };\n    })(),\n\n    blockquote: function blockquote( block, next ) {\n      if ( !block.match( /^>/m ) )\n        return undefined;\n\n      var jsonml = [];\n\n      // separate out the leading abutting block, if any. I.e. in this case:\n      //\n      //  a\n      //  > b\n      //\n      if ( block[ 0 ] != \">\" ) {\n        var lines = block.split( /\\n/ ),\n            prev = [],\n            line_no = block.lineNumber;\n\n        // keep shifting lines until you find a crotchet\n        while ( lines.length && lines[ 0 ][ 0 ] != \">\" ) {\n            prev.push( lines.shift() );\n            line_no++;\n        }\n\n        var abutting = mk_block( prev.join( \"\\n\" ), \"\\n\", block.lineNumber );\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\n        // reassemble new block of just block quotes!\n        block = mk_block( lines.join( \"\\n\" ), block.trailing, line_no );\n      }\n\n\n      // if the next block is also a blockquote merge it in\n      while ( next.length && next[ 0 ][ 0 ] == \">\" ) {\n        var b = next.shift();\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\n      }\n\n      // Strip off the leading \"> \" and re-process as a block.\n      var input = block.replace( /^> ?/gm, \"\" ),\n          old_tree = this.tree,\n          processedBlock = this.toTree( input, [ \"blockquote\" ] ),\n          attr = extract_attr( processedBlock );\n\n      // If any link references were found get rid of them\n      if ( attr && attr.references ) {\n        delete attr.references;\n        // And then remove the attribute object if it's empty\n        if ( isEmpty( attr ) ) {\n          processedBlock.splice( 1, 1 );\n        }\n      }\n\n      jsonml.push( processedBlock );\n      return jsonml;\n    },\n\n    referenceDefn: function referenceDefn( block, next) {\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:(['\"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\n      // interesting matches are [ , ref_id, url, , title, title ]\n\n      if ( !block.match(re) )\n        return undefined;\n\n      // make an attribute node if it doesn't exist\n      if ( !extract_attr( this.tree ) ) {\n        this.tree.splice( 1, 0, {} );\n      }\n\n      var attrs = extract_attr( this.tree );\n\n      // make a references hash if it doesn't exist\n      if ( attrs.references === undefined ) {\n        attrs.references = {};\n      }\n\n      var b = this.loop_re_over_block(re, block, function( m ) {\n\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\n          href: m[2]\n        };\n\n        if ( m[4] !== undefined )\n          ref.title = m[4];\n        else if ( m[5] !== undefined )\n          ref.title = m[5];\n\n      } );\n\n      if ( b.length )\n        next.unshift( mk_block( b, block.trailing ) );\n\n      return [];\n    },\n\n    para: function para( block, next ) {\n      // everything's a para!\n      return [ [\"para\"].concat( this.processInline( block ) ) ];\n    }\n  }\n};\n\nMarkdown.dialects.Gruber.inline = {\n\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\n      var m,\n          res,\n          lastIndex = 0;\n\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\n      var re = new RegExp( \"([\\\\s\\\\S]*?)(\" + (patterns_or_re.source || patterns_or_re) + \")\" );\n\n      m = re.exec( text );\n      if (!m) {\n        // Just boring text\n        return [ text.length, text ];\n      }\n      else if ( m[1] ) {\n        // Some un-interesting text matched. Return that first\n        return [ m[1].length, m[1] ];\n      }\n\n      var res;\n      if ( m[2] in this.dialect.inline ) {\n        res = this.dialect.inline[ m[2] ].call(\n                  this,\n                  text.substr( m.index ), m, previous_nodes || [] );\n      }\n      // Default for now to make dev easier. just slurp special and output it.\n      res = res || [ m[2].length, m[2] ];\n      return res;\n    },\n\n    __call__: function inline( text, patterns ) {\n\n      var out = [],\n          res;\n\n      function add(x) {\n        //D:self.debug(\"  adding output\", uneval(x));\n        if ( typeof x == \"string\" && typeof out[out.length-1] == \"string\" )\n          out[ out.length-1 ] += x;\n        else\n          out.push(x);\n      }\n\n      while ( text.length > 0 ) {\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\n        text = text.substr( res.shift() );\n        forEach(res, add )\n      }\n\n      return out;\n    },\n\n    // These characters are intersting elsewhere, so have rules for them so that\n    // chunks of plain text blocks don't include them\n    \"]\": function () {},\n    \"}\": function () {},\n\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\n\n    \"\\\\\": function escaped( text ) {\n      // [ length of input processed, node/children to add... ]\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\n      if ( this.dialect.inline.__escape__.exec( text ) )\n        return [ 2, text.charAt( 1 ) ];\n      else\n        // Not an esacpe\n        return [ 1, \"\\\\\" ];\n    },\n\n    \"![\": function image( text ) {\n\n      // Unlike images, alt text is plain text only. no other elements are\n      // allowed in there\n\n      // ![Alt text](/path/to/img.jpg \"Optional title\")\n      //      1          2            3       4         <--- captures\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^\")]*?)(?:[ \\t]+([\"'])(.*?)\\3)?[ \\t]*\\)/ );\n\n      if ( m ) {\n        if ( m[2] && m[2][0] == \"<\" && m[2][m[2].length-1] == \">\" )\n          m[2] = m[2].substring( 1, m[2].length - 1 );\n\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\n\n        var attrs = { alt: m[1], href: m[2] || \"\" };\n        if ( m[4] !== undefined)\n          attrs.title = m[4];\n\n        return [ m[0].length, [ \"img\", attrs ] ];\n      }\n\n      // ![Alt text][id]\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\n\n      if ( m ) {\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion\n        return [ m[0].length, [ \"img_ref\", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\n      }\n\n      // Just consume the '!['\n      return [ 2, \"![\" ];\n    },\n\n    \"[\": function link( text ) {\n\n      var orig = String(text);\n      // Inline content is possible inside `link text`\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), \"]\" );\n\n      // No closing ']' found. Just consume the [\n      if ( !res ) return [ 1, \"[\" ];\n\n      var consumed = 1 + res[ 0 ],\n          children = res[ 1 ],\n          link,\n          attrs;\n\n      // At this point the first [...] has been parsed. See what follows to find\n      // out which kind of link we are (reference or direct url)\n      text = text.substr( consumed );\n\n      // [link text](/path/to/img.jpg \"Optional title\")\n      //                 1            2       3         <--- captures\n      // This will capture up to the last paren in the block. We then pull\n      // back based on if there a matching ones in the url\n      //    ([here](/url/(test))\n      // The parens have to be balanced\n      var m = text.match( /^\\s*\\([ \\t]*([^\"']*)(?:[ \\t]+([\"'])(.*?)\\2)?[ \\t]*\\)/ );\n      if ( m ) {\n        var url = m[1];\n        consumed += m[0].length;\n\n        if ( url && url[0] == \"<\" && url[url.length-1] == \">\" )\n          url = url.substring( 1, url.length - 1 );\n\n        // If there is a title we don't have to worry about parens in the url\n        if ( !m[3] ) {\n          var open_parens = 1; // One open that isn't in the capture\n          for ( var len = 0; len < url.length; len++ ) {\n            switch ( url[len] ) {\n            case \"(\":\n              open_parens++;\n              break;\n            case \")\":\n              if ( --open_parens == 0) {\n                consumed -= url.length - len;\n                url = url.substring(0, len);\n              }\n              break;\n            }\n          }\n        }\n\n        // Process escapes only\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\n\n        attrs = { href: url || \"\" };\n        if ( m[3] !== undefined)\n          attrs.title = m[3];\n\n        link = [ \"link\", attrs ].concat( children );\n        return [ consumed, link ];\n      }\n\n      // [Alt text][id]\n      // [Alt text] [id]\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\n\n      if ( m ) {\n\n        consumed += m[ 0 ].length;\n\n        // [links][] uses links as its reference\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\n\n        link = [ \"link_ref\", attrs ].concat( children );\n\n        // We can't check if the reference is known here as it likely wont be\n        // found till after. Check it in md tree->hmtl tree conversion.\n        // Store the original so that conversion can revert if the ref isn't found.\n        return [ consumed, link ];\n      }\n\n      // [id]\n      // Only if id is plain (no formatting.)\n      if ( children.length == 1 && typeof children[0] == \"string\" ) {\n\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\n        link = [ \"link_ref\", attrs, children[0] ];\n        return [ consumed, link ];\n      }\n\n      // Just consume the \"[\"\n      return [ 1, \"[\" ];\n    },\n\n\n    \"<\": function autoLink( text ) {\n      var m;\n\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\n        if ( m[3] ) {\n          return [ m[0].length, [ \"link\", { href: \"mailto:\" + m[3] }, m[3] ] ];\n\n        }\n        else if ( m[2] == \"mailto\" ) {\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1].substr(\"mailto:\".length ) ] ];\n        }\n        else\n          return [ m[0].length, [ \"link\", { href: m[1] }, m[1] ] ];\n      }\n\n      return [ 1, \"<\" ];\n    },\n\n    \"`\": function inlineCode( text ) {\n      // Inline code block. as many backticks as you like to start it\n      // Always skip over the opening ticks.\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\n\n      if ( m && m[2] )\n        return [ m[1].length + m[2].length, [ \"inlinecode\", m[3] ] ];\n      else {\n        // TODO: No matching end code found - warn!\n        return [ 1, \"`\" ];\n      }\n    },\n\n    \"  \\n\": function lineBreak( text ) {\n      return [ 3, [ \"linebreak\" ] ];\n    }\n\n};\n\n// Meta Helper/generator method for em and strong handling\nfunction strong_em( tag, md ) {\n\n  var state_slot = tag + \"_state\",\n      other_slot = tag == \"strong\" ? \"em_state\" : \"strong_state\";\n\n  function CloseTag(len) {\n    this.len_after = len;\n    this.name = \"close_\" + md;\n  }\n\n  return function ( text, orig_match ) {\n\n    if ( this[state_slot][0] == md ) {\n      // Most recent em is of this type\n      //D:this.debug(\"closing\", md);\n      this[state_slot].shift();\n\n      // \"Consume\" everything to go back to the recrusion in the else-block below\n      return[ text.length, new CloseTag(text.length-md.length) ];\n    }\n    else {\n      // Store a clone of the em/strong states\n      var other = this[other_slot].slice(),\n          state = this[state_slot].slice();\n\n      this[state_slot].unshift(md);\n\n      //D:this.debug_indent += \"  \";\n\n      // Recurse\n      var res = this.processInline( text.substr( md.length ) );\n      //D:this.debug_indent = this.debug_indent.substr(2);\n\n      var last = res[res.length - 1];\n\n      //D:this.debug(\"processInline from\", tag + \": \", uneval( res ) );\n\n      var check = this[state_slot].shift();\n      if ( last instanceof CloseTag ) {\n        res.pop();\n        // We matched! Huzzah.\n        var consumed = text.length - last.len_after;\n        return [ consumed, [ tag ].concat(res) ];\n      }\n      else {\n        // Restore the state of the other kind. We might have mistakenly closed it.\n        this[other_slot] = other;\n        this[state_slot] = state;\n\n        // We can't reuse the processed result as it could have wrong parsing contexts in it.\n        return [ md.length, md ];\n      }\n    }\n  }; // End returned function\n}\n\nMarkdown.dialects.Gruber.inline[\"**\"] = strong_em(\"strong\", \"**\");\nMarkdown.dialects.Gruber.inline[\"__\"] = strong_em(\"strong\", \"__\");\nMarkdown.dialects.Gruber.inline[\"*\"]  = strong_em(\"em\", \"*\");\nMarkdown.dialects.Gruber.inline[\"_\"]  = strong_em(\"em\", \"_\");\n\n\n// Build default order from insertion order.\nMarkdown.buildBlockOrder = function(d) {\n  var ord = [];\n  for ( var i in d ) {\n    if ( i == \"__order__\" || i == \"__call__\" ) continue;\n    ord.push( i );\n  }\n  d.__order__ = ord;\n};\n\n// Build patterns for inline matcher\nMarkdown.buildInlinePatterns = function(d) {\n  var patterns = [];\n\n  for ( var i in d ) {\n    // __foo__ is reserved and not a pattern\n    if ( i.match( /^__.*__$/) ) continue;\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, \"\\\\$1\" )\n             .replace( /\\n/, \"\\\\n\" );\n    patterns.push( i.length == 1 ? l : \"(?:\" + l + \")\" );\n  }\n\n  patterns = patterns.join(\"|\");\n  d.__patterns__ = patterns;\n  //print(\"patterns:\", uneval( patterns ) );\n\n  var fn = d.__call__;\n  d.__call__ = function(text, pattern) {\n    if ( pattern != undefined ) {\n      return fn.call(this, text, pattern);\n    }\n    else\n    {\n      return fn.call(this, text, patterns);\n    }\n  };\n};\n\nMarkdown.DialectHelpers = {};\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\n  var consumed = 0,\n      nodes = [];\n\n  while ( true ) {\n    if ( text.charAt( consumed ) == want ) {\n      // Found the character we were looking for\n      consumed++;\n      return [ consumed, nodes ];\n    }\n\n    if ( consumed >= text.length ) {\n      // No closing char found. Abort.\n      return null;\n    }\n\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\n    consumed += res[ 0 ];\n    // Add any returned nodes.\n    nodes.push.apply( nodes, res.slice( 1 ) );\n  }\n}\n\n// Helper function to make sub-classing a dialect easier\nMarkdown.subclassDialect = function( d ) {\n  function Block() {}\n  Block.prototype = d.block;\n  function Inline() {}\n  Inline.prototype = d.inline;\n\n  return { block: new Block(), inline: new Inline() };\n};\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\n\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\n\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\n  var meta = split_meta_hash( meta_string ),\n      attr = {};\n\n  for ( var i = 0; i < meta.length; ++i ) {\n    // id: #foo\n    if ( /^#/.test( meta[ i ] ) ) {\n      attr.id = meta[ i ].substring( 1 );\n    }\n    // class: .foo\n    else if ( /^\\./.test( meta[ i ] ) ) {\n      // if class already exists, append the new one\n      if ( attr[\"class\"] ) {\n        attr[\"class\"] = attr[\"class\"] + meta[ i ].replace( /./, \" \" );\n      }\n      else {\n        attr[\"class\"] = meta[ i ].substring( 1 );\n      }\n    }\n    // attribute: foo=bar\n    else if ( /\\=/.test( meta[ i ] ) ) {\n      var s = meta[ i ].split( /\\=/ );\n      attr[ s[ 0 ] ] = s[ 1 ];\n    }\n  }\n\n  return attr;\n}\n\nfunction split_meta_hash( meta_string ) {\n  var meta = meta_string.split( \"\" ),\n      parts = [ \"\" ],\n      in_quotes = false;\n\n  while ( meta.length ) {\n    var letter = meta.shift();\n    switch ( letter ) {\n      case \" \" :\n        // if we're in a quoted section, keep it\n        if ( in_quotes ) {\n          parts[ parts.length - 1 ] += letter;\n        }\n        // otherwise make a new part\n        else {\n          parts.push( \"\" );\n        }\n        break;\n      case \"'\" :\n      case '\"' :\n        // reverse the quotes and move straight on\n        in_quotes = !in_quotes;\n        break;\n      case \"\\\\\" :\n        // shift off the next letter to be used straight away.\n        // it was escaped so we'll keep it whatever it is\n        letter = meta.shift();\n      default :\n        parts[ parts.length - 1 ] += letter;\n        break;\n    }\n  }\n\n  return parts;\n}\n\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\n  // we're only interested in the first block\n  if ( block.lineNumber > 1 ) return undefined;\n\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\n\n  // make an attribute node if it doesn't exist\n  if ( !extract_attr( this.tree ) ) {\n    this.tree.splice( 1, 0, {} );\n  }\n\n  var pairs = block.split( /\\n/ );\n  for ( p in pairs ) {\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\n        key = m[ 1 ].toLowerCase(),\n        value = m[ 2 ];\n\n    this.tree[ 1 ][ key ] = value;\n  }\n\n  // document_meta produces no content!\n  return [];\n};\n\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\n  // check if the last line of the block is an meta hash\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\n  if ( !m ) return undefined;\n\n  // process the meta hash\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\n\n  var hash;\n\n  // if we matched ^ then we need to apply meta to the previous block\n  if ( m[ 1 ] === \"\" ) {\n    var node = this.tree[ this.tree.length - 1 ];\n    hash = extract_attr( node );\n\n    // if the node is a string (rather than JsonML), bail\n    if ( typeof node === \"string\" ) return undefined;\n\n    // create the attribute hash if it doesn't exist\n    if ( !hash ) {\n      hash = {};\n      node.splice( 1, 0, hash );\n    }\n\n    // add the attributes in\n    for ( a in attr ) {\n      hash[ a ] = attr[ a ];\n    }\n\n    // return nothing so the meta hash is removed\n    return [];\n  }\n\n  // pull the meta hash off the block and process what's left\n  var b = block.replace( /\\n.*$/, \"\" ),\n      result = this.processBlock( b, [] );\n\n  // get or make the attributes hash\n  hash = extract_attr( result[ 0 ] );\n  if ( !hash ) {\n    hash = {};\n    result[ 0 ].splice( 1, 0, hash );\n  }\n\n  // attach the attributes to the block\n  for ( a in attr ) {\n    hash[ a ] = attr[ a ];\n  }\n\n  return result;\n};\n\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\n  // one or more terms followed by one or more definitions, in a single block\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\n      list = [ \"dl\" ],\n      i, m;\n\n  // see if we're dealing with a tight or loose block\n  if ( ( m = block.match( tight ) ) ) {\n    // pull subsequent tight DL blocks out of `next`\n    var blocks = [ block ];\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\n      blocks.push( next.shift() );\n    }\n\n    for ( var b = 0; b < blocks.length; ++b ) {\n      var m = blocks[ b ].match( tight ),\n          terms = m[ 1 ].replace( /\\n$/, \"\" ).split( /\\n/ ),\n          defns = m[ 2 ].split( /\\n:\\s+/ );\n\n      // print( uneval( m ) );\n\n      for ( i = 0; i < terms.length; ++i ) {\n        list.push( [ \"dt\", terms[ i ] ] );\n      }\n\n      for ( i = 0; i < defns.length; ++i ) {\n        // run inline processing over the definition\n        list.push( [ \"dd\" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, \"$1\" ) ) ) );\n      }\n    }\n  }\n  else {\n    return undefined;\n  }\n\n  return [ list ];\n};\n\n// splits on unescaped instances of @ch. If @ch is not a character the result\n// can be unpredictable\n\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\n\n    var _split_on_unescaped = function(s, ch) {\n        ch = ch || '\\\\s';\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = '\\\\' + ch; }\n        var res = [ ],\n            r = new RegExp('^((?:\\\\\\\\.|[^\\\\\\\\' + ch + '])*)' + ch + '(.*)'),\n            m;\n        while(m = s.match(r)) {\n            res.push(m[1]);\n            s = m[2];\n        }\n        res.push(s);\n        return res;\n    }\n\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        // find at least an unescaped pipe in each line\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\n        i, m;\n    if (m = block.match(leading_pipe)) {\n        // remove leading pipes in contents\n        // (header and horizontal rule already have the leading pipe left out)\n        m[3] = m[3].replace(/^\\s*\\|/gm, '');\n    } else if (! ( m = block.match(no_leading_pipe))) {\n        return undefined;\n    }\n\n    var table = [ \"table\", [ \"thead\", [ \"tr\" ] ], [ \"tbody\" ] ];\n\n    // remove trailing pipes, then split on pipes\n    // (no escaped pipes are allowed in horizontal rule)\n    m[2] = m[2].replace(/\\|\\s*$/, '').split('|');\n\n    // process alignment\n    var html_attrs = [ ];\n    forEach (m[2], function (s) {\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: \"right\"});\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: \"left\"});\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: \"center\"});\n        else                              html_attrs.push({});\n    });\n\n    // now for the header, avoid escaped pipes\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, ''), '|');\n    for (i = 0; i < m[1].length; i++) {\n        table[1][1].push(['th', html_attrs[i] || {}].concat(\n            this.processInline(m[1][i].trim())));\n    }\n\n    // now for body contents\n    forEach (m[3].replace(/\\|\\s*$/mg, '').split('\\n'), function (row) {\n        var html_row = ['tr'];\n        row = _split_on_unescaped(row, '|');\n        for (i = 0; i < row.length; i++) {\n            html_row.push(['td', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\n        }\n        table[2].push(html_row);\n    }, this);\n\n    return [table];\n}\n\nMarkdown.dialects.Maruku.inline[ \"{:\" ] = function inline_meta( text, matches, out ) {\n  if ( !out.length ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // get the preceeding element\n  var before = out[ out.length - 1 ];\n\n  if ( typeof before === \"string\" ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // match a meta hash\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\n\n  // no match, false alarm\n  if ( !m ) {\n    return [ 2, \"{:\" ];\n  }\n\n  // attach the attributes to the preceeding element\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\n      attr = extract_attr( before );\n\n  if ( !attr ) {\n    attr = {};\n    before.splice( 1, 0, attr );\n  }\n\n  for ( var k in meta ) {\n    attr[ k ] = meta[ k ];\n  }\n\n  // cut out the string and replace it with nothing\n  return [ m[ 0 ].length, \"\" ];\n};\n\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\n\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\n\nvar isArray = Array.isArray || function(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n};\n\nvar forEach;\n// Don't mess with Array.prototype. Its not friendly\nif ( Array.prototype.forEach ) {\n  forEach = function( arr, cb, thisp ) {\n    return arr.forEach( cb, thisp );\n  };\n}\nelse {\n  forEach = function(arr, cb, thisp) {\n    for (var i = 0; i < arr.length; i++) {\n      cb.call(thisp || arr, arr[i], i, arr);\n    }\n  }\n}\n\nvar isEmpty = function( obj ) {\n  for ( var key in obj ) {\n    if ( hasOwnProperty.call( obj, key ) ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction extract_attr( jsonml ) {\n  return isArray(jsonml)\n      && jsonml.length > 1\n      && typeof jsonml[ 1 ] === \"object\"\n      && !( isArray(jsonml[ 1 ]) )\n      ? jsonml[ 1 ]\n      : undefined;\n}\n\n\n\n/**\n *  renderJsonML( jsonml[, options] ) -> String\n *  - jsonml (Array): JsonML array to render to XML\n *  - options (Object): options\n *\n *  Converts the given JsonML into well-formed XML.\n *\n *  The options currently understood are:\n *\n *  - root (Boolean): wether or not the root node should be included in the\n *    output, or just its children. The default `false` is to not include the\n *    root itself.\n */\nexpose.renderJsonML = function( jsonml, options ) {\n  options = options || {};\n  // include the root element in the rendered output?\n  options.root = options.root || false;\n\n  var content = [];\n\n  if ( options.root ) {\n    content.push( render_tree( jsonml ) );\n  }\n  else {\n    jsonml.shift(); // get rid of the tag\n    if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n      jsonml.shift(); // get rid of the attributes\n    }\n\n    while ( jsonml.length ) {\n      content.push( render_tree( jsonml.shift() ) );\n    }\n  }\n\n  return content.join( \"\\n\\n\" );\n};\n\nfunction escapeHTML( text ) {\n  return text.replace( /&/g, \"&amp;\" )\n             .replace( /</g, \"&lt;\" )\n             .replace( />/g, \"&gt;\" )\n             .replace( /\"/g, \"&quot;\" )\n             .replace( /'/g, \"&#39;\" );\n}\n\nfunction render_tree( jsonml ) {\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return escapeHTML( jsonml );\n  }\n\n  var tag = jsonml.shift(),\n      attributes = {},\n      content = [];\n\n  if ( jsonml.length && typeof jsonml[ 0 ] === \"object\" && !( jsonml[ 0 ] instanceof Array ) ) {\n    attributes = jsonml.shift();\n  }\n\n  while ( jsonml.length ) {\n    content.push( render_tree( jsonml.shift() ) );\n  }\n\n  var tag_attrs = \"\";\n  for ( var a in attributes ) {\n    tag_attrs += \" \" + a + '=\"' + escapeHTML( attributes[ a ] ) + '\"';\n  }\n\n  // be careful about adding whitespace here for inline elements\n  if ( tag == \"img\" || tag == \"br\" || tag == \"hr\" ) {\n    return \"<\"+ tag + tag_attrs + \"/>\";\n  }\n  else {\n    return \"<\"+ tag + tag_attrs + \">\" + content.join( \"\" ) + \"</\" + tag + \">\";\n  }\n}\n\nfunction convert_tree_to_html( tree, references, options ) {\n  var i;\n  options = options || {};\n\n  // shallow clone\n  var jsonml = tree.slice( 0 );\n\n  if ( typeof options.preprocessTreeNode === \"function\" ) {\n      jsonml = options.preprocessTreeNode(jsonml, references);\n  }\n\n  // Clone attributes if they exist\n  var attrs = extract_attr( jsonml );\n  if ( attrs ) {\n    jsonml[ 1 ] = {};\n    for ( i in attrs ) {\n      jsonml[ 1 ][ i ] = attrs[ i ];\n    }\n    attrs = jsonml[ 1 ];\n  }\n\n  // basic case\n  if ( typeof jsonml === \"string\" ) {\n    return jsonml;\n  }\n\n  // convert this node\n  switch ( jsonml[ 0 ] ) {\n    case \"header\":\n      jsonml[ 0 ] = \"h\" + jsonml[ 1 ].level;\n      delete jsonml[ 1 ].level;\n      break;\n    case \"bulletlist\":\n      jsonml[ 0 ] = \"ul\";\n      break;\n    case \"numberlist\":\n      jsonml[ 0 ] = \"ol\";\n      break;\n    case \"listitem\":\n      jsonml[ 0 ] = \"li\";\n      break;\n    case \"para\":\n      jsonml[ 0 ] = \"p\";\n      break;\n    case \"markdown\":\n      jsonml[ 0 ] = \"html\";\n      if ( attrs ) delete attrs.references;\n      break;\n    case \"code_block\":\n      jsonml[ 0 ] = \"pre\";\n      i = attrs ? 2 : 1;\n      var code = [ \"code\" ];\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\n      jsonml[ i ] = code;\n      break;\n    case \"inlinecode\":\n      jsonml[ 0 ] = \"code\";\n      break;\n    case \"img\":\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\n      delete jsonml[ 1 ].href;\n      break;\n    case \"linebreak\":\n      jsonml[ 0 ] = \"br\";\n    break;\n    case \"link\":\n      jsonml[ 0 ] = \"a\";\n      break;\n    case \"link_ref\":\n      jsonml[ 0 ] = \"a\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.href = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n    case \"img_ref\":\n      jsonml[ 0 ] = \"img\";\n\n      // grab this ref and clean up the attribute node\n      var ref = references[ attrs.ref ];\n\n      // if the reference exists, make the link\n      if ( ref ) {\n        delete attrs.ref;\n\n        // add in the href and title, if present\n        attrs.src = ref.href;\n        if ( ref.title ) {\n          attrs.title = ref.title;\n        }\n\n        // get rid of the unneeded original text\n        delete attrs.original;\n      }\n      // the reference doesn't exist, so revert to plain text\n      else {\n        return attrs.original;\n      }\n      break;\n  }\n\n  // convert all the children\n  i = 1;\n\n  // deal with the attribute node, if it exists\n  if ( attrs ) {\n    // if there are keys, skip over it\n    for ( var key in jsonml[ 1 ] ) {\n        i = 2;\n        break;\n    }\n    // if there aren't, remove it\n    if ( i === 1 ) {\n      jsonml.splice( i, 1 );\n    }\n  }\n\n  for ( ; i < jsonml.length; ++i ) {\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\n  }\n\n  return jsonml;\n}\n\n\n// merges adjacent text nodes into a single node\nfunction merge_text_nodes( jsonml ) {\n  // skip the tag name and attribute hash\n  var i = extract_attr( jsonml ) ? 2 : 1;\n\n  while ( i < jsonml.length ) {\n    // if it's a string check the next item too\n    if ( typeof jsonml[ i ] === \"string\" ) {\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === \"string\" ) {\n        // merge the second string into the first and remove it\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\n      }\n      else {\n        ++i;\n      }\n    }\n    // if it's not a string recurse\n    else {\n      merge_text_nodes( jsonml[ i ] );\n      ++i;\n    }\n  }\n}\n\n} )( (function() {\n  if ( typeof exports === \"undefined\" ) {\n    window.markdown = {};\n    return window.markdown;\n  }\n  else {\n    return exports;\n  }\n} )() );\n","// super simple module for the most common nodejs use case.\nexports.markdown = require(\"./markdown\");\nexports.parse = exports.markdown.toHTML;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modele-view\"},[_c('b-card',{staticClass:\"mb-2\"},[_c('b-card-title',[_vm._v(_vm._s(_vm.label))]),_c('b-card-header',[_c('UserName',{attrs:{\"webId\":_vm.maker}}),_c('Date',{attrs:{\"dateIso\":_vm.created}})],1),_c('b-card-text',{domProps:{\"innerHTML\":_vm._s(_vm.HtmlContent)}}),_c('b-card-footer',[_c('small',[_vm._v(\" \"+_vm._s(_vm.types)+\" \")]),_c('br'),_c('b-button',{attrs:{\"to\":{ name: 'Post', params: { url: _vm.url }},\"variant\":\"outline-info\"}},[_vm._v(\"Reply / New\")]),(_vm.inReplyTo != undefined)?_c('b-button',{attrs:{\"to\":{ name: 'View', query: { url: _vm.article_url }},\"variant\":\"outline-info\"}},[_vm._v(\"in Reply to\")]):_vm._e(),(_vm.inReplyTo != undefined)?_c('b-card-text',[_vm._v(\" in reply to \"+_vm._s(_vm.inReplyTo)+\" \")]):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"modele-view\">\n    <!--  <Component /> -->\n\n\n    <b-card class=\"mb-2\">\n      <b-card-title>{{ label }}</b-card-title>\n\n      <b-card-header>\n        <UserName :webId=\"maker\" />\n        <Date :dateIso=\"created\"/>\n      </b-card-header>\n\n      <b-card-text v-html=\"HtmlContent\"> </b-card-text>\n\n\n\n      <b-card-footer>\n\n\n        <small> {{ types}} </small><br>\n        <!-- <router-link v-bind:to=\"{ name: 'Inbox', params: { inbox: inbox }}\">inbox</router-link> <br> -->\n        <!-- <router-link v-bind:to=\"{ name: 'Post'}\">Create a Article</router-link> -->\n            <b-button  v-bind:to=\"{ name: 'Post', params: { url: url }}\" variant=\"outline-info\">Reply / New</b-button>\n        <b-button  v-if=\"inReplyTo != undefined\" v-bind:to=\"{ name: 'View', query: { url: article_url }}\" variant=\"outline-info\">in Reply to</b-button>\n        <b-card-text v-if=\"inReplyTo != undefined\"> in reply to {{ inReplyTo }} </b-card-text>\n\n      </b-card-footer>\n    </b-card>\n\n  </div>\n</template>\n\n<script>\nimport { fetchDocument } from 'tripledoc';\nimport { /*vcard,*/ dct, foaf, ldp, rdfs, rdf, sioc} from 'rdf-namespaces' //\nimport {markdown} from 'markdown';\n\nexport default {\n  name: 'ArticleView',\n  components: {\n    'UserName': () => import('@/components/basic/UserName'),\n    'Date': () => import('@/components/basic/Date'),\n  },\n  props:['subject','url'],\n  created(){\n    this.update(this.subject)\n    this.article_url = this.$route.params.url\n  if( this.article_url == undefined){\n   this.article_url = this.$route.query.url\n    this.$route.query.hash != \"\" ? this.article_url = this.article_url+this.$route.query.hash : \"\"\n  }\n  console.log(this.$route.query.hash != \"\")\n    console.log(\"article_url\",this.article_url)\n  },\n  watch:{\n  async  '$route' (to) {\n      console.log(to)\n      this.article_url = to.params.url\n    if( this.article_url == undefined){\n     this.article_url = to.query.url\n     console.log(to.query.hash)\n      to.query.hash != undefined && to.query.hash.length > 0 ? this.article_url = this.article_url+to.query.hash : \"\"\n    }\n      console.log(\"article_url\",this.article_url)\n      if (this.article_url != this.url){\n        this.url = this.article_url\n        let dataDoc = await fetchDocument(this.url);\n        let url =  this.url.includes(\"#\") ? this.url : this.url+\"#this\"\n         console.log(url)\n        let subject = await dataDoc.getSubject(url)\n        this.update(subject)\n      }\n    },\n    async  article_url(){\n      console.log(this.article_url)\n      if (this.article_url != this.url){\n        this.url = this.article_url\n        let dataDoc = await fetchDocument(this.url);\n        let url =  this.url.includes(\"#\") ? this.url : this.url+\"#this\"\n         console.log(url)\n        let subject = await dataDoc.getSubject(url)\n        this.update(subject)\n      }\n    }\n  },\n  methods: {\n    update(subject) {\n    //  console.log(\"Subject\", subject)\n      this.label = subject.getLiteral(rdfs.label)\n      this.created = subject.getLiteral(dct.created)\n      this.content = subject.getLiteral(sioc.content)\n      this.HtmlContent = markdown.toHTML( this.content)\n      this.inbox = subject.getRef(ldp.inbox)\n      this.maker = subject.getRef(foaf.maker)\n      this.types = subject.getAllRefs(rdf.type)\n      this.inReplyTo = subject.getRef(\"https://www.w3.org/ns/activitystreams#inReplyTo\")\nconsole.log(\"update\",this.label)\n    }\n  }\n}\n</script>\n<style>\n.modele-view {\n  text-align: left;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ArticleView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ArticleView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ArticleView.vue?vue&type=template&id=4e6372e6&\"\nimport script from \"./ArticleView.vue?vue&type=script&lang=js&\"\nexport * from \"./ArticleView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ArticleView.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ArticleView.vue?vue&type=style&index=0&lang=css&\"","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n"],"sourceRoot":""}