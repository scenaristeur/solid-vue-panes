{"version":3,"sources":["webpack:///./src/mixins/profileMixin.js","webpack:///./src/components/solid/SolidTrackSession.vue?f8b0","webpack:///src/components/solid/SolidTrackSession.vue","webpack:///./src/components/solid/SolidTrackSession.vue?b335","webpack:///./src/components/solid/SolidTrackSession.vue"],"names":["fc","FC","auth","methods","getProfile","webId","profile","friends","fetchDocument","profileDoc","p","getSubject","name","getString","vcard","fn","organization","role","photo","getRef","hasPhoto","bday","gender","hasGender","note","getAllRefs","foaf","knows","addressUrl","hasAddress","add","locality","country","postal","region","address","this","getWorkspaces","workspaces","length","console","log","i","w","groups_folder","path","tensions_folder","readFolder","g_folder","t_folder","g_urls","files","t_urls","groups","tensions","makeToast","message","getInboxUrls","inbox_urls","ldp","inbox","getFriends","solid","data","storage","indexFile","itemExists","workspacesDoc","subjects","getAllSubjectsOfType","s","getLiteral","rdf","label","pod","push","subject","asRef","split","getGroups","forEach","folder","f","getTensions","addIndex","fullpath","classe","inst","dateObj","Date","date","toISOString","puti","$store","state","indexes","url","putiDoc","addSubject","newchat","addLiteral","rdfs","addNodeRef","dct","created","save","getIndexes","instances","classes","prti","getNodeRef","findSubjects","puIndexes","index","instance","undefined","title","content","variant","$bvToast","toast","render","_vm","_h","$createElement","_c","_self","user","staticClass","_v","attrs","_s","_e","staticRenderFns","mixins","profileMixin","component"],"mappings":"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","file":"js/chunk-45132d3c.008c049c.js","sourcesContent":["import { fetchDocument } from 'tripledoc';\r\nimport { vcard, foaf, dct, rdfs, ldp , rdf} from 'rdf-namespaces'\r\nimport auth from 'solid-auth-client';\r\nimport FC from 'solid-file-client'\r\nconst fc = new FC( auth )\r\n\r\nexport default {\r\n  methods: {\r\n    getProfile: async function(webId){\r\n      let profile = {friends:[]}\r\n      profile.webId = webId\r\n      try{\r\n        let profileDoc = await fetchDocument(webId);\r\n        const p = profileDoc.getSubject(webId)\r\n        profile.name = p.getString(vcard.fn)\r\n        profile.organization = p.getString(\"http://www.w3.org/2006/vcard/ns#organization-name\")\r\n        profile.role = p.getString(vcard.role)\r\n        profile.photo = p.getRef(vcard.hasPhoto)\r\n        profile.bday = p.getString(vcard.bday)\r\n        profile.gender = p.getString(vcard.hasGender)\r\n        profile.note = p.getString(vcard.note)\r\n        profile.friends = p.getAllRefs(foaf.knows)\r\n        //profile.trustedApps = p.getAllLiterals(\"http://www.w3.org/ns/auth/acl#trustedApp\")\r\n        //  console.log(p)\r\n        //  console.log(acl)\r\n\r\n        //must check if there are many addressUrl\r\n        let addressUrl = p.getRef(vcard.hasAddress)\r\n        //    console.log(\"Address Node \",addressUrl)\r\n        if (addressUrl != null){\r\n          let add = profileDoc.getSubject(addressUrl);\r\n          profile.locality = add.getString(vcard.locality)\r\n          profile.country = add.getString(\"http://www.w3.org/2006/vcard/ns#country-name\")\r\n          profile.postal = add.getString(\"http://www.w3.org/2006/vcard/ns#postal-code\")\r\n          profile.region = add.getString(vcard.region)\r\n          profile.address = add.getString(\"http://www.w3.org/2006/vcard/ns#street-address\")\r\n        }\r\n\r\n        profile.workspaces = await this.getWorkspaces(webId)\r\n\r\n        if (profile.workspaces.length > 0 ){\r\n          console.log(\"PF\",profile.workspaces)\r\n          for(let i in profile.workspaces){\r\n            let w = profile.workspaces[i]\r\n            if(w.name == \"gouvernance\"){\r\n              let groups_folder = w.path+\"groups\"\r\n              let tensions_folder = w.path+\"tensions\"\r\n              console.log(\"ww\",w, groups_folder, tensions_folder)\r\n              let g_folder = await fc.readFolder(groups_folder)\r\n              let t_folder = await fc.readFolder(groups_folder)\r\n              let g_urls = g_folder.files\r\n              let t_urls = t_folder.files\r\n              console.log(g_urls, t_urls)\r\n              profile.groups = g_urls\r\n              profile.tensions = t_urls\r\n\r\n\r\n            }\r\n\r\n\r\n          }\r\n          //  profile.groups = await this.getGroups(webId)\r\n          //  profile.tensions = await this.getTensions(webId)\r\n          console.log(\"PROFILE\",webId, profile)\r\n        }\r\n\r\n        // ???  Does not work profile.photo = await p.getString(vcard.hasPhoto)\r\n        /*  let photo = await solid.data.[webId].vcard$hasPhoto\r\n        profile.photo = `${photo}`*/\r\n      }catch(e){\r\n        //console.log(e)\r\n        this.makeToast(e.message, webId, 'warning')\r\n      }\r\n      //  console.log(profile)\r\n      return profile\r\n    },\r\n    getInboxUrls: async function(webId){\r\n      let inbox_urls = []\r\n      try{\r\n        let profileDoc = await fetchDocument(webId);\r\n        const p = profileDoc.getSubject(webId)\r\n        inbox_urls = await  p.getAllRefs(ldp.inbox )\r\n      }catch(e){\r\n        //alert(webId+\" : \"+e)\r\n        this.makeToast(e.message, webId, 'warning')\r\n      }\r\n      return inbox_urls\r\n    },\r\n    getFriends: async function(webId){\r\n      let friends = []\r\n      try{\r\n        let profileDoc = await fetchDocument(webId);\r\n        const p = profileDoc.getSubject(webId)\r\n        friends = await  p.getAllRefs(foaf.knows )\r\n      }catch(e){\r\n        //alert(webId+\" : \"+e)\r\n        this.makeToast(e.message, webId, 'warning')\r\n      }\r\n      return friends\r\n    },\r\n\r\n\r\n\r\n    getWorkspaces: async function(webId){\r\n\r\n      let workspaces = []\r\n      let storage =  await solid.data[webId].storage\r\n      let indexFile = storage+\"public/popock/workspaces.ttl\"\r\n      //  console.log(webId, storage, indexFile)\r\n      if ( fc.itemExists(indexFile)){\r\n        let workspacesDoc = {}\r\n        try{\r\n          workspacesDoc = await fetchDocument(indexFile)\r\n          let subjects = workspacesDoc.getAllSubjectsOfType(\"http://www.w3.org/ns/pim/space#Workspace\")\r\n          for  (let s of subjects) {\r\n            let name = s.getLiteral(rdf.label)\r\n            let path = s.getRef(\"http://www.w3.org/ns/pim/space#storage\")\r\n            let pod = s.getRef(\"http://www.w3.org/ns/solid/terms#webId\")\r\n            workspaces.push({name: name, path: path, pod: pod, subject: s.asRef().split('#')[1]})\r\n          }\r\n        }catch(e){\r\n          //  console.log(e)\r\n          //  workspacesDoc = await createDocument(indexFile)\r\n        }\r\n      }\r\n\r\n\r\n      //console.log(\"WWWW workspaces\",workspaces)\r\n      return workspaces\r\n    },\r\n    getGroups: async function(webId){\r\n      let groups = []\r\n      let   workspaces = await this.getWorkspaces(webId)\r\n\r\n      if (workspaces.length > 0){\r\n        console.log(webId, workspaces)\r\n        workspaces.forEach(async function (w) {\r\n\r\n          if(w.name == 'gouvernance'){\r\n            console.log(w.name, w.path, w.subject)\r\n            let folder = w.path+'groups'\r\n            console.log(\"groups_folder\", folder)\r\n            let f = await fc.readFolder(folder)\r\n            groups = f.files\r\n            console.log(\"GGGGGGGRRRRoups 2\",groups)\r\n            return groups\r\n          }\r\n        });\r\n\r\n      }\r\n\r\n    },\r\n\r\n    getTensions: async function(webId){\r\n      let tensions = []\r\n      let   workspaces = await this.getWorkspaces(webId)\r\n\r\n      if (workspaces.length > 0){\r\n        console.log(webId, workspaces)\r\n        workspaces.forEach(async function (w) {\r\n          console.log(w.name, w.path, w.subject)\r\n          if(w.name == 'gouvernance'){\r\n            let folder = w.path+'tensions'\r\n            console.log(\"TTTTTTTTTension folder\", folder)\r\n            let f = await fc.readFolder(folder)\r\n            tensions = f.files\r\n            console.log(\"TTTTTENSIONS\",tensions)\r\n          }\r\n        });\r\n      }\r\n      return tensions\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    addIndex: async function(fullpath, classe, name){\r\n      let inst  =  fullpath+\"/index.ttl#this\"\r\n      var dateObj = new Date();\r\n      var date = dateObj.toISOString()\r\n\r\n      //      console.log(inst, classe, name, webId)\r\n      let puti = this.$store.state.solid.indexes.puti\r\n      //    console.log(puti)\r\n      let putiDoc = await fetchDocument(puti.url)\r\n      let newchat = await putiDoc.addSubject()\r\n      //subj.addLiteral(dct.created, date)\r\n      newchat.addLiteral(rdfs.label, name)\r\n      newchat.addNodeRef(\"http://www.w3.org/ns/solid/terms#forClass\", classe)\r\n      newchat.addNodeRef(\"http://www.w3.org/ns/solid/terms#instance\", inst)\r\n      newchat.addLiteral(dct.created, date)\r\n      await putiDoc.save();\r\n\r\n    },\r\n    getIndexes: async function(webId){\r\n      let indexes = {puti: {instances: [], classes: []}, prti: {instances: [], classes: []}}\r\n      try{\r\n        let profileDoc = await fetchDocument(webId);\r\n        const subject = profileDoc.getSubject(webId)\r\n\r\n        let puti = await  subject.getNodeRef(\"http://www.w3.org/ns/solid/terms#publicTypeIndex\" )\r\n        let prti = await  subject.getNodeRef(\"http://www.w3.org/ns/solid/terms#privateTypeIndex\" )\r\n\r\n        //    console.log(puti)\r\n        //    console.log(prti)\r\n        indexes.puti.url = puti\r\n        indexes.prti.url = prti\r\n        let putiDoc = await fetchDocument(puti)\r\n        //  let prtiDoc = await fetchDocument(prti)\r\n        //    console.log(putiDoc)\r\n        //    console.log(prtiDoc)\r\n        let puIndexes = await putiDoc.findSubjects(\"http://www.w3.org/ns/solid/terms#forClass\")\r\n        //  let prIndexes = await prtiDoc.findSubjects(\"http://www.w3.org/ns/solid/terms#forClass\")\r\n        //    console.log(puIndexes,prIndexes)\r\n\r\n        puIndexes.forEach( async function(index) {\r\n          let classe = await index.getRef(\"http://www.w3.org/ns/solid/terms#forClass\")\r\n          let instance = await index.getRef(\"http://www.w3.org/ns/solid/terms#instance\")\r\n          let created = await index.getString(dct.created)\r\n          let label = await index.getString(rdfs.label)\r\n          //    console.log(instance, classe)\r\n          indexes.puti.instances.push({instance: instance, classe: classe, label: label, created: created})\r\n          indexes.puti.classes[classe] ==  undefined ? indexes.puti.classes[classe] = [] : \"\"\r\n          indexes.puti.classes[classe].push(instance)\r\n        });\r\n\r\n        /*  prIndexes.forEach( async function(index) {\r\n        let classe = await index.getRef(\"http://www.w3.org/ns/solid/terms#forClass\")\r\n        let instance = await index.getRef(\"http://www.w3.org/ns/solid/terms#instance\")\r\n        let created = await index.getString(dct.created)\r\n        let label = await index.getString(rdfs.label)\r\n        //    console.log(instance, classe)\r\n        indexes.prti.instances.push({instance: instance, classe: classe, label: label, created: created})\r\n        indexes.prti.classes[classe] ==  undefined ? indexes.prti.classes[classe] = [] : \"\"\r\n        indexes.prti.classes[classe].push(instance)\r\n      });*/\r\n\r\n\r\n\r\n    }catch(e){\r\n      //  console.log(e)\r\n    }\r\n    console.log(webId, indexes)\r\n    return indexes\r\n  },\r\n  makeToast(title, content,variant = null) {\r\n    this.$bvToast.toast(content , {\r\n      title: title,\r\n      variant: variant,\r\n      solid: true\r\n    })\r\n  }\r\n}\r\n\r\n\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.user != null)?_c('div',{staticClass:\"solid-track-session\"},[_c('i',[_c('small',[_vm._v(\"Logged as : \"),_c('a',{attrs:{\"href\":_vm.webId,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.user))])])])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"solid-track-session\" v-if=\"user != null\">\r\n<i><small>Logged as : <a v-bind:href=\"webId\" target=\"_blank\">{{ user }}</a></small></i>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from 'solid-auth-client';\r\nimport profileMixin from '@/mixins/profileMixin'\r\n\r\n\r\nexport default {\r\n  name: 'SolidTrackSession',\r\n  mixins: [profileMixin],\r\n  data: function () {\r\n    return {\r\n      user: null,\r\n      webId: null\r\n    }\r\n  },\r\n  created(){\r\n  /*  $.getJSON('http://gd.geobytes.com/GetCityDetails?callback=?', function(data) {\r\n  console.log(JSON.stringify(data, null, 2));\r\n});*/\r\n\r\n\r\n\r\n\r\n    auth.trackSession(async session => {\r\n      if (!session){\r\n        this.user = null\r\n        console.log('The user is not logged in')\r\n        this.$store.dispatch('solid/setWebId', null)\r\n        this.$store.commit('solid/setFriends', [])\r\n        this.$store.commit('solid/setProfile', {})\r\n        this.$store.commit('solid/setIndexes', {})\r\n        //this.$store.commit('inbox/setInboxUrls', [])\r\n      } else{\r\n        this.webId = session.webId\r\n        this.user = session.webId.split('/').slice(2,3)[0]\r\n        console.log(`The user is ${session.webId}`)\r\n        this.$store.dispatch('solid/setWebId', this.webId)\r\n        let friends = await this.getFriends(this.webId)\r\n        this.$store.commit('solid/setFriends', friends)\r\n        let profile = await this.getProfile(this.webId)\r\n        this.$store.commit('solid/setProfile', profile)\r\n        let indexes = await this.getIndexes(this.webId)\r\n        this.$store.commit('solid/setIndexes', indexes)\r\n      //  let inbox_urls = await this.getInboxUrls(this.webId)\r\n      //  this.$store.commit('inbox/setInboxUrls', inbox_urls)\r\n      }\r\n    })\r\n  },\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidTrackSession.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolidTrackSession.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SolidTrackSession.vue?vue&type=template&id=c430d6a0&\"\nimport script from \"./SolidTrackSession.vue?vue&type=script&lang=js&\"\nexport * from \"./SolidTrackSession.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}